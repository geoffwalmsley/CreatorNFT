(mod (MOD_HASH STATE ROYALTY Truths new_state payment_info)

     ;; new_state: update for new STATE

     ;; STATE = (for_sale_flag, price, owner_ph, owner_pk)
     ;; payment_info = p2_singleton_coin_id

     ;; ROYALTY = (creator_puzhash, percentage)

     (include condition_codes.clib)
     (include sha256tree.clib)
     (include singleton_truths.clib)
     (include curry_and_treehash.clib)

     (defun new_puzzle_hash (MOD_HASH ROYALTY new_state)
         (puzzle-hash-of-curried-function MOD_HASH
	 				  (sha256tree ROYALTY)
	 				  (sha256tree new_state)

					  ;; (sha256 1 new_pk)
					  ;; (sha256 1 (f (r (r (r new_state)))))
					  (sha256 1 MOD_HASH))
     )

     (defun-inline creator_amt (STATE ROYALTY)

	 (if (f (r ROYALTY))
	     (/ (f (r STATE)) (/ 100 (f (r ROYALTY))))
	     (q . 0)
	 )
     )


     ;; UPDATE STATE
     (defun update_state (MOD_HASH STATE ROYALTY my_amount new_state)
         (list
	       (list CREATE_COIN
	             (new_puzzle_hash MOD_HASH
		                      ROYALTY
				      new_state)
		     my_amount)

	       (list AGG_SIG_ME
	             (f (r (r (r STATE))))
		     (sha256 MOD_HASH)))     ;; Probably should sign treehash of new_state
     )

     ;; RECREATE WITH NEW STATE and PAYOUT
     (defun trade_coin (MOD_HASH
			STATE
			ROYALTY
			my_amount
			new_state
			payment_info)


         (list

	       (list CREATE_COIN			;; Recreate singleton
		     (new_puzzle_hash MOD_HASH
		     		      ROYALTY
				      new_state)
	             my_amount)

	       (list CREATE_COIN			;; Payout current owner
	             (f (r (r STATE)))
		     (- (f (r STATE))
		     	(creator_amt STATE
			             ROYALTY)))

	       (list CREATE_COIN			;; Payout Creator
	             (f ROYALTY)
		     (creator_amt STATE ROYALTY))


	       (list CREATE_PUZZLE_ANNOUNCEMENT		;; Announce the p2 coin id
	             payment_info)

	       (list ASSERT_COIN_ANNOUNCEMENT		;; Assert the p2_coin spend
	             (sha256 payment_info
		             (sha256tree new_state)))

	       (list AGG_SIG_ME				;; Buyer signs
	             (f (r (r (r new_state))))
		     (sha256 MOD_HASH))
	 ))


    ;; ---------------------------------------------------------------------------
    ;; MAIN

    (if payment_info
        (if (= (f STATE) 100)
	    (trade_coin MOD_HASH
                        STATE
		        ROYALTY
		        (my_amount_truth Truths)
      		        new_state
		        payment_info)
	    (x)
	)
        (update_state MOD_HASH
		      STATE
		      ROYALTY
		      (my_amount_truth Truths)
		      new_state)
   )


)
